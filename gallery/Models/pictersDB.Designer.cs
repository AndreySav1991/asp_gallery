//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace gallery.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class pictersDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект pictersDBEntities, используя строку соединения из раздела "pictersDBEntities" файла конфигурации приложения.
        /// </summary>
        public pictersDBEntities() : base("name=pictersDBEntities", "pictersDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта pictersDBEntities.
        /// </summary>
        public pictersDBEntities(string connectionString) : base(connectionString, "pictersDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта pictersDBEntities.
        /// </summary>
        public pictersDBEntities(EntityConnection connection) : base(connection, "pictersDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<picture> pictures
        {
            get
            {
                if ((_pictures == null))
                {
                    _pictures = base.CreateObjectSet<picture>("pictures");
                }
                return _pictures;
            }
        }
        private ObjectSet<picture> _pictures;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet pictures. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopictures(picture picture)
        {
            base.AddObject("pictures", picture);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="pictersDBModel", Name="picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class picture : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта picture.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        /// <param name="nazva">Исходное значение свойства nazva.</param>
        /// <param name="avtor">Исходное значение свойства avtor.</param>
        /// <param name="img">Исходное значение свойства img.</param>
        /// <param name="price">Исходное значение свойства price.</param>
        public static picture Createpicture(global::System.Int32 id, global::System.String nazva, global::System.String avtor, global::System.String img, global::System.Decimal price)
        {
            picture picture = new picture();
            picture.id = id;
            picture.nazva = nazva;
            picture.avtor = avtor;
            picture.img = img;
            picture.price = price;
            return picture;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nazva
        {
            get
            {
                return _nazva;
            }
            set
            {
                OnnazvaChanging(value);
                ReportPropertyChanging("nazva");
                _nazva = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nazva");
                OnnazvaChanged();
            }
        }
        private global::System.String _nazva;
        partial void OnnazvaChanging(global::System.String value);
        partial void OnnazvaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String avtor
        {
            get
            {
                return _avtor;
            }
            set
            {
                OnavtorChanging(value);
                ReportPropertyChanging("avtor");
                _avtor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("avtor");
                OnavtorChanged();
            }
        }
        private global::System.String _avtor;
        partial void OnavtorChanging(global::System.String value);
        partial void OnavtorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String img
        {
            get
            {
                return _img;
            }
            set
            {
                OnimgChanging(value);
                ReportPropertyChanging("img");
                _img = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("img");
                OnimgChanged();
            }
        }
        private global::System.String _img;
        partial void OnimgChanging(global::System.String value);
        partial void OnimgChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Decimal _price;
        partial void OnpriceChanging(global::System.Decimal value);
        partial void OnpriceChanged();

        #endregion
    
    }

    #endregion
    
}
